//标志，默认为0，当有执行部署工作流时加1
private static int flag;
private static ProcessEngine processEngine;
private static String id;
static {
	flag = 0;
	ProcessEngineConfiguration engineConfiguration = ProcessEngineConfiguration.createProcessEngineConfigurationFromResource("activiti-context.xml");
	processEngine = engineConfiguration.buildProcessEngine();
	List<ProcessDefinition> processDefinitions = processEngine.getRepositoryService().createProcessDefinitionQuery()
			.processDefinitionKey("myProcess").list();//一般流程
	List<ProcessDefinition> processDefinitions1 = processEngine.getRepositoryService().createProcessDefinitionQuery()
			.processDefinitionKey("consultation").list();//会商流程
	if (null == processDefinitions || processDefinitions.size() < 1) {
		flag += 1;
		deploy();//封装的一般流程执行部署的方法
	}
	if (null == processDefinitions1 || processDefinitions1.size() < 1) {
		deployConsultation();//封装的会商流程执行部署的方法
	}
}

静态代码块是启动项目的时候就会执行，所以我们可以做到，每次启动的时候Activiti流程图都是最新的，当然，这也会造成资源浪费
所以新的代码加上控制，只有没有这个流程才会执行部署，如果真的修改了流程，手动部署